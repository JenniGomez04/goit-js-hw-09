{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEIC,EAAaC,SAASC,cAAc,wBACpCC,EAAYF,SAASC,cAAc,kBACnCE,EAASH,SAASC,cAAc,oBAIzBD,SAASC,cAAc,SAoB7BG,iBAAiB,UAAU,SAACC,G,kBAS/BC,YAAW,WACT,IAAIC,EAA8BC,EACjCC,QAAQC,IAAIH,GACZC,GAAeG,EA9BpB,SAAuBC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GActC,OAbc,IAAIC,SAAQ,SAACC,EAASC,GAClCb,YAAW,WACLQ,GACFL,QAAQC,IAAI,uBAAwCU,OAAfR,EAAS,QAAYQ,OAANP,EAAM,QAC1DQ,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCH,OAAfR,EAAS,QAAYQ,OAANP,EAAM,QACpEK,EAAM,uBAAwCE,OAAfR,EAAS,QAAYQ,OAANP,EAAM,UAEtDJ,QAAQC,IAAI,sBAAuCU,OAAfR,EAAS,QAAYQ,OAANP,EAAM,QACzDQ,EAAAxB,GAASyB,OAAOE,QAAQ,sBAAuCJ,OAAfR,EAAS,QAAYQ,OAANP,EAAM,QACnEM,EAAK,sBAAqCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,Q,GAEpDA,E,IAmBCY,CAAcb,EAAUL,GACxBmB,MAAK,SAACC,GACLlB,QAAQC,IAAIiB,E,IAEbC,OAAM,SAACC,GACNpB,QAAQC,IAAImB,E,MAEXrB,E,EApBPH,EAAMyB,iBACNrB,QAAQC,IAAI,SAMZ,IALA,IAAIF,EAAcuB,OAAOhC,EAAW4B,OAChChB,EAAaoB,OAAO7B,EAAUyB,OAC9BK,EAAUD,OAAO5B,EAAOwB,OAGnBM,EAAW,EAAGA,GAAYD,EAASC,GAAY,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet firstDelay = document.querySelector('input[name =\"delay\"]');\nlet delayStep = document.querySelector('[name =\"step\"]');\nlet amount = document.querySelector('[name =\"amount\"]');\n//let butPromise = document.querySelector('button')\n//console.log(firstDelay, delayStep, amount, butPromise);\n\nlet form = document.querySelector('.form')\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`)\n        resolve(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      } else {\n        console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n        reject(`❌ Rejected promise ${position} in ${delay} ms`);\n      }\n    },delay)\n  })\n  return promise\n}\n\nform.addEventListener('submit', (event) =>{\n  event.preventDefault();\n  console.log('click')\n  let firstDelayN = Number(firstDelay.value);\n  let delayStepN = Number(delayStep.value);\n  let amountN = Number(amount.value);\n  //let multiPosition = delayStep.value * position esta linea saltaria los pasos * amount\n\n  for (let position = 1; position <= amountN; position += 1) {\n  setTimeout(() => {\n    let multiPosition = firstDelayN = firstDelayN;  // inicia en el valor ingresado por el usuario\n     console.log(multiPosition)\n     firstDelayN += delayStepN;  // sumo para el segundo paso\n\n       createPromise(position, multiPosition)\n      .then((value)=>{\n        console.log(value)\n      })\n      .catch((error)=>{\n        console.log(error)\n      })\n      }, firstDelayN)\n};\n});\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","addEventListener","event","setTimeout","multiPosition","firstDelayN","console","log","delayStepN","position","delay","shouldResolve","Math","random","Promise","resolve","reject","concat","$parcel$interopDefault","Notify","success","failure","$ce04d3a99e08e73b$var$createPromise","then","value","catch","error","preventDefault","Number","amountN","position1","_loop"],"version":3,"file":"03-promises.dba49d47.js.map"}